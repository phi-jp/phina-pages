Ext.data.JsonP.global_Number({"tagname":"class","name":"global.Number","autodetected":{},"files":[{"filename":"number.js","href":"number.html#global-Number"}],"members":[{"name":"abs","tagname":"method","owner":"global.Number","id":"method-abs","meta":{}},{"name":"acos","tagname":"method","owner":"global.Number","id":"method-acos","meta":{}},{"name":"asin","tagname":"method","owner":"global.Number","id":"method-asin","meta":{}},{"name":"atan","tagname":"method","owner":"global.Number","id":"method-atan","meta":{}},{"name":"ceil","tagname":"method","owner":"global.Number","id":"method-ceil","meta":{}},{"name":"clamp","tagname":"method","owner":"global.Number","id":"method-clamp","meta":{}},{"name":"cos","tagname":"method","owner":"global.Number","id":"method-cos","meta":{}},{"name":"downto","tagname":"method","owner":"global.Number","id":"method-downto","meta":{}},{"name":"exp","tagname":"method","owner":"global.Number","id":"method-exp","meta":{}},{"name":"floor","tagname":"method","owner":"global.Number","id":"method-floor","meta":{}},{"name":"log","tagname":"method","owner":"global.Number","id":"method-log","meta":{}},{"name":"map","tagname":"method","owner":"global.Number","id":"method-map","meta":{}},{"name":"max","tagname":"method","owner":"global.Number","id":"method-max","meta":{}},{"name":"min","tagname":"method","owner":"global.Number","id":"method-min","meta":{}},{"name":"padding","tagname":"method","owner":"global.Number","id":"method-padding","meta":{}},{"name":"pow","tagname":"method","owner":"global.Number","id":"method-pow","meta":{}},{"name":"round","tagname":"method","owner":"global.Number","id":"method-round","meta":{}},{"name":"sin","tagname":"method","owner":"global.Number","id":"method-sin","meta":{}},{"name":"sqrt","tagname":"method","owner":"global.Number","id":"method-sqrt","meta":{}},{"name":"step","tagname":"method","owner":"global.Number","id":"method-step","meta":{}},{"name":"tan","tagname":"method","owner":"global.Number","id":"method-tan","meta":{}},{"name":"times","tagname":"method","owner":"global.Number","id":"method-times","meta":{}},{"name":"toBin","tagname":"method","owner":"global.Number","id":"method-toBin","meta":{}},{"name":"toDegree","tagname":"method","owner":"global.Number","id":"method-toDegree","meta":{}},{"name":"toHex","tagname":"method","owner":"global.Number","id":"method-toHex","meta":{}},{"name":"toInt","tagname":"method","owner":"global.Number","id":"method-toInt","meta":{}},{"name":"toRadian","tagname":"method","owner":"global.Number","id":"method-toRadian","meta":{}},{"name":"toUnsigned","tagname":"method","owner":"global.Number","id":"method-toUnsigned","meta":{}},{"name":"upto","tagname":"method","owner":"global.Number","id":"method-upto","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-global.Number","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/number.html#global-Number' target='_blank'>number.js</a></div></pre><div class='doc-contents'><h1>拡張した Number クラス</h1>\n\n<p>数値を扱う Number クラスを拡張しています。</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-abs' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-abs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-abs' class='name expandable'>abs</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>絶対値を返します。 ...</div><div class='long'><p>絶対値を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(-5).abs(); // =&gt; 5\n(+5).abs(); // =&gt; 5\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>絶対値</p>\n</div></li></ul></div></div></div><div id='method-acos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-acos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-acos' class='name expandable'>acos</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>アークコサイン（ラジアン単位）を返します。 ...</div><div class='long'><p>アークコサイン（ラジアン単位）を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(0).asin(); // =&gt; 0\n(1).asin(); // =&gt; 1.5707963267948966\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>アークコサイン</p>\n</div></li></ul></div></div></div><div id='method-asin' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-asin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-asin' class='name expandable'>asin</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>アークサイン（ラジアン単位）を返します。 ...</div><div class='long'><p>アークサイン（ラジアン単位）を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(1).acos(); // =&gt; 0\n(-1).acos(); // =&gt; 3.141592653589793\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>アークサイン</p>\n</div></li></ul></div></div></div><div id='method-atan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-atan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-atan' class='name expandable'>atan</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>アークタンジェント（ラジアン単位）を返します。 ...</div><div class='long'><p>アークタンジェント（ラジアン単位）を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(0).atan(); // =&gt; 0\n(1).atan(); // =&gt; 0.7853981633974483\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>アークタンジェント</p>\n</div></li></ul></div></div></div><div id='method-ceil' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-ceil' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-ceil' class='name expandable'>ceil</a>( <span class='pre'>[figure]</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>指定した小数の位を切り上げた値を返します。 ...</div><div class='long'><p>指定した小数の位を切り上げた値を返します。</p>\n\n<p>負の値を指定すると整数部の位を切り上げられます。</p>\n\n<h3>Example</h3>\n\n<pre><code>(-1.27).ceil(); // =&gt; -1\n(-1.87).ceil(); // =&gt; -1\n\n(2.345).ceil(); // =&gt; 3\n(2.345).ceil(1); // =&gt; 2.4\n(2.345).ceil(2); // =&gt; 2.35\n\n(12345.67).ceil(-3); // =&gt; 13000\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>figure</span> : Number (optional)<div class='sub-desc'><p>切り上げる位</p>\n<p>Defaults to: <code>0</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>小数第 figure 位で切り上げた値</p>\n</div></li></ul></div></div></div><div id='method-clamp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-clamp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-clamp' class='name expandable'>clamp</a>( <span class='pre'>min, max</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>指定した範囲に収めた値を返します。 ...</div><div class='long'><p>指定した範囲に収めた値を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(200).clamp(0, 640); // =&gt; 200\n(-15).clamp(0, 640); // =&gt; 0\n(999).clamp(0, 640); // =&gt; 640\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>min</span> : Number<div class='sub-desc'><p>範囲の下限</p>\n</div></li><li><span class='pre'>max</span> : Number<div class='sub-desc'><p>範囲の上限</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>範囲内に収めた値</p>\n</div></li></ul></div></div></div><div id='method-cos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-cos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-cos' class='name expandable'>cos</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>コサイン（ラジアン単位）を返します。 ...</div><div class='long'><p>コサイン（ラジアン単位）を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(Math.PI/3).cos(); // =&gt; 0.5\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>コサイン</p>\n</div></li></ul></div></div></div><div id='method-downto' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-downto' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-downto' class='name expandable'>downto</a>( <span class='pre'>fn, [self]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>自分自身の数から指定した数まで、カウンタをデクリメントしながら関数を繰り返し実行します。 ...</div><div class='long'><p>自分自身の数から指定した数まで、カウンタをデクリメントしながら関数を繰り返し実行します。</p>\n\n<p>指定した数が自分自身の数より大きい場合は関数は実行されません。</p>\n\n<h3>Example</h3>\n\n<pre><code>arr = [];\n(7).downto(4, function(i){\n  arr.push(i);\n}); // =&gt; [7, 6, 5, 4]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>コールバック関数。引数にカウンタが渡される。</p>\n</div></li><li><span class='pre'>self</span> : Object (optional)<div class='sub-desc'><p>関数内で this として参照される値。デフォルトは自分自身。</p>\n<p>Defaults to: <code>this</code></p></div></li></ul></div></div></div><div id='method-exp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-exp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-exp' class='name expandable'>exp</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>ethis を返します。ここで e は自然対数の底であるネイピア数（オイラー数）です。 ...</div><div class='long'><p>e<sup>this</sup> を返します。ここで e は自然対数の底であるネイピア数（オイラー数）です。</p>\n\n<h3>Example</h3>\n\n<pre><code>(2).exp(); // =&gt; e&lt;sup&gt;2&lt;/sup&gt;\n(0).exp(); // =&gt; 1\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>e<sup>x</sup></p>\n</div></li></ul></div></div></div><div id='method-floor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-floor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-floor' class='name expandable'>floor</a>( <span class='pre'>[figure]</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>指定した小数の位を切り下げた値を返します。 ...</div><div class='long'><p>指定した小数の位を切り下げた値を返します。</p>\n\n<p>負の値を指定すると整数部の位を切り下げられます。</p>\n\n<h3>Example</h3>\n\n<pre><code>(-1.27).floor(); // =&gt; -2\n(-1.87).floor(); // =&gt; -2\n\n(2.345).floor(); // =&gt; 2\n(2.345).floor(1); // =&gt; 2.3\n(2.345).floor(2); // =&gt; 2.34\n\n(12345.67).floor(-3); // =&gt; 12000\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>figure</span> : Number (optional)<div class='sub-desc'><p>切り下げる位</p>\n<p>Defaults to: <code>0</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>小数第 figure 位で切り下げた値</p>\n</div></li></ul></div></div></div><div id='method-log' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-log' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-log' class='name expandable'>log</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>自然対数を返します。 ...</div><div class='long'><p>自然対数を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(Math.E * Math.E * Math.E).log(); // =&gt; 3\n(1).log(); // =&gt; 0\n(0).log(); // =&gt; -Infinity\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>自然対数</p>\n</div></li></ul></div></div></div><div id='method-map' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-map' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-map' class='name expandable'>map</a>( <span class='pre'>fn, [self]</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>0から自分自身の値-1までカウンタをインクリメントさせながらコールバック関数を繰り返し実行し、\nその返り値を要素とする配列を生成します。 ...</div><div class='long'><p>0から自分自身の値-1までカウンタをインクリメントさせながらコールバック関数を繰り返し実行し、\nその返り値を要素とする配列を生成します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(5).map(function(i) {\n  return i*i;\n}); // =&gt; [0, 1, 4, 9, 16]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>コールバック関数。引数にカウンタが渡される。</p>\n</div></li><li><span class='pre'>self</span> : Object (optional)<div class='sub-desc'><p>関数内で this として参照される値。デフォルトは自分自身。</p>\n<p>Defaults to: <code>this</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>生成した配列</p>\n</div></li></ul></div></div></div><div id='method-max' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-max' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-max' class='name expandable'>max</a>( <span class='pre'>value</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>自分自身と引数の値を比べ、大きい方の値を返します。 ...</div><div class='long'><p>自分自身と引数の値を比べ、大きい方の値を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(15).max(10); // =&gt; 15\n(15).max(90); // =&gt; 90\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Number<div class='sub-desc'><p>比較する値</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>最大値</p>\n</div></li></ul></div></div></div><div id='method-min' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-min' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-min' class='name expandable'>min</a>( <span class='pre'>value</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>自分自身と引数の値を比べ、小さい方の値を返します。 ...</div><div class='long'><p>自分自身と引数の値を比べ、小さい方の値を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(15).min(10); // =&gt; 10\n(15).min(90); // =&gt; 15\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Number<div class='sub-desc'><p>比較する値</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>最小値</p>\n</div></li></ul></div></div></div><div id='method-padding' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-padding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-padding' class='name expandable'>padding</a>( <span class='pre'>n, [ch]</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>指定した桁になるように文字を埋めます。 ...</div><div class='long'><p>指定した桁になるように文字を埋めます。</p>\n\n<h3>Example</h3>\n\n<pre><code>(123).padding(5); // =&gt; \"00123\"\n(123).padding(5, \"_\"); // =&gt; \"__123\"\n(-12).padding(5); // =&gt; \"-0012\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>桁数</p>\n</div></li><li><span class='pre'>ch</span> : String (optional)<div class='sub-desc'><p>埋める文字</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>桁数を揃えた文字列</p>\n</div></li></ul></div></div></div><div id='method-pow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-pow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-pow' class='name expandable'>pow</a>( <span class='pre'>exponent</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>自分自身を exponent 乗した値、つまり thisexponent の値を返します。 ...</div><div class='long'><p>自分自身を exponent 乗した値、つまり this<sup>exponent</sup> の値を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(3).pow(2); // =&gt; 9\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>exponent</span> : Number<div class='sub-desc'><p>累乗する指数</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>累乗した結果の値</p>\n</div></li></ul></div></div></div><div id='method-round' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-round' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-round' class='name expandable'>round</a>( <span class='pre'>[figure]</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>指定した小数の位を四捨五入した値を返します。 ...</div><div class='long'><p>指定した小数の位を四捨五入した値を返します。</p>\n\n<p>負の値を指定すると整数部の位を四捨五入できます。</p>\n\n<h3>Example</h3>\n\n<pre><code>(13.87).round(); // =&gt; 14\n(-1.87).round(); // =&gt; -2\n(-1.27).round(); // =&gt; -1\n\n(2.345).round(); // =&gt; 2\n(2.345).round(1); // =&gt; 2.3\n(2.345).round(2); // =&gt; 2.35\n\n(12345.67).round(-3); // =&gt; 12000\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>figure</span> : Number (optional)<div class='sub-desc'><p>四捨五入する位</p>\n<p>Defaults to: <code>0</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>小数第 figure 位で四捨五入した値</p>\n</div></li></ul></div></div></div><div id='method-sin' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-sin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-sin' class='name expandable'>sin</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>サイン（ラジアン単位）を返します。 ...</div><div class='long'><p>サイン（ラジアン単位）を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(Math.PI/4).sin(); // =&gt; 0.7071067811865476\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>サイン</p>\n</div></li></ul></div></div></div><div id='method-sqrt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-sqrt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-sqrt' class='name expandable'>sqrt</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>平方根を返します。 ...</div><div class='long'><p>平方根を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(49).sqrt(); // =&gt; 7\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>平方根</p>\n</div></li></ul></div></div></div><div id='method-step' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-step' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-step' class='name expandable'>step</a>( <span class='pre'>limit, step, fn, [self]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>自分自身の値から指定した数まで、カウンタを増分させながら関数を繰り返し実行します。 ...</div><div class='long'><p>自分自身の値から指定した数まで、カウンタを増分させながら関数を繰り返し実行します。</p>\n\n<p>上限値や増分値は float 型を指定することができます。</p>\n\n<h3>Example</h3>\n\n<pre><code>var arr = [];\n(2.4).step(5.3, 0.8, function(n) {\n  arr.push(n);\n }); // =&gt; [2.4, 3.2, 4.0, 4.8]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>カウンタの上限値</p>\n</div></li><li><span class='pre'>step</span> : Number<div class='sub-desc'><p>カウンタを増分する量</p>\n</div></li><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>コールバック関数。引数にカウンタが渡される。</p>\n</div></li><li><span class='pre'>self</span> : Object (optional)<div class='sub-desc'><p>関数内で this として参照される値。デフォルトは自分自身。</p>\n<p>Defaults to: <code>this</code></p></div></li></ul></div></div></div><div id='method-tan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-tan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-tan' class='name expandable'>tan</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>タンジェント（ラジアン単位）を返します。 ...</div><div class='long'><p>タンジェント（ラジアン単位）を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(Math.PI/4).tan(); // =&gt; 1.0\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>タンジェント</p>\n</div></li></ul></div></div></div><div id='method-times' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-times' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-times' class='name expandable'>times</a>( <span class='pre'>fn, [self]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>0 から自分自身の数-1まで、カウンタをインクリメントしながら関数を繰り返し実行します。 ...</div><div class='long'><p>0 から自分自身の数-1まで、カウンタをインクリメントしながら関数を繰り返し実行します。</p>\n\n<h3>Example</h3>\n\n<pre><code>arr = [];\n(5).times(function(i){\n  arr.push(i);\n}); // =&gt; [0, 1, 2, 3, 4]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>コールバック関数</p>\n</div></li><li><span class='pre'>self</span> : Object (optional)<div class='sub-desc'><p>関数内で this として参照される値。デフォルトは自分自身。</p>\n<p>Defaults to: <code>this</code></p></div></li></ul></div></div></div><div id='method-toBin' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-toBin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-toBin' class='name expandable'>toBin</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>数値を2進数表記にした文字列を返します。 ...</div><div class='long'><p>数値を2進数表記にした文字列を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(6).toBin(); // =&gt; \"110\"\n(-6).toBin(); // =&gt; \"-110\"\n(0xA3).toBin(); // =&gt; \"10100011\"\n(6.25).toHex(); // =&gt; \"110.01\"\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>2進数表記の文字列</p>\n</div></li></ul></div></div></div><div id='method-toDegree' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-toDegree' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-toDegree' class='name expandable'>toDegree</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>ラジアンを度に変換します。 ...</div><div class='long'><p>ラジアンを度に変換します。</p>\n\n<h3>Example</h3>\n\n<pre><code>Math.radToDeg(Math.PI/4); // =&gt; 45\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>度</p>\n</div></li></ul></div></div></div><div id='method-toHex' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-toHex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-toHex' class='name expandable'>toHex</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>数値を16進数表記にした文字列を返します。 ...</div><div class='long'><p>数値を16進数表記にした文字列を返します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(26).toHex(); // =&gt; \"1a\"\n(-26).toHex(); // =&gt; \"-1a\"\n(26.25).toHex(); // =&gt; \"1a.4\"\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>16進数表記の文字列</p>\n</div></li></ul></div></div></div><div id='method-toInt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-toInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-toInt' class='name expandable'>toInt</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>数値を整数に変換します。 ...</div><div class='long'><p>数値を整数に変換します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(42.195).toInt(); // =&gt; 42\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>整数値</p>\n</div></li></ul></div></div></div><div id='method-toRadian' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-toRadian' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-toRadian' class='name expandable'>toRadian</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>度をラジアンに変換します。 ...</div><div class='long'><p>度をラジアンに変換します。</p>\n\n<h3>Example</h3>\n\n<pre><code>(180).toRadian(); // =&gt; 3.141592653589793\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>ラジアン</p>\n</div></li></ul></div></div></div><div id='method-toUnsigned' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-toUnsigned' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-toUnsigned' class='name expandable'>toUnsigned</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>数値を unsigned int 型に変換します。 ...</div><div class='long'><p>数値を unsigned int 型に変換します。</p>\n\n<p>数値を符号無し整数として評価した値を返します。<br/>\nJavascriptのビット演算では数値を符号付きの32bit整数として扱うため、RGBA を\n整数値で表現して演算する場合、期待通りの結果が得られない場合があります。\nそこで本関数で unsigned int 型に変換することで期待通りの値を得ることができます。</p>\n\n<h3>Example</h3>\n\n<pre><code>rgba = 0xfeffffff &amp; 0xff000000; // =&gt; -33554432\nrgba.toHex(); // =&gt; \"-2000000\"\nrgba.toUnsigned().toHex(); // =&gt; \"fe000000\"\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>unsigned int 型に変換した値</p>\n</div></li></ul></div></div></div><div id='method-upto' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global.Number'>global.Number</span><br/><a href='source/number.html#global-Number-method-upto' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global.Number-method-upto' class='name expandable'>upto</a>( <span class='pre'>fn, [self]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>自分自身の数から指定した数まで、カウンタをインクリメントしながら関数を繰り返し実行します。 ...</div><div class='long'><p>自分自身の数から指定した数まで、カウンタをインクリメントしながら関数を繰り返し実行します。</p>\n\n<p>指定した数が自分自身の数より小さい場合は関数は実行されません。</p>\n\n<h3>Example</h3>\n\n<pre><code>arr = [];\n(6).upto(8, function(i){\n  arr.push(i);\n});\narr; // =&gt; [6, 7, 8]\n\n(3).upto(0, function(i){\n  arr.push(i);\n});\narr; // =&gt; [6, 7, 8]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>コールバック関数。引数にカウンタが渡される。</p>\n</div></li><li><span class='pre'>self</span> : Object (optional)<div class='sub-desc'><p>関数内で this として参照される値。デフォルトは自分自身。</p>\n<p>Defaults to: <code>this</code></p></div></li></ul></div></div></div></div></div></div></div>","meta":{}});